import "std.um"

fn check1(m: []str, x, y, dx, dy: int): int {
    if m[y][x] == 'S' {
        a := m[y+dy][x+dx]
        b := m[y+dy*2][x+dx*2]
        c := m[y+dy*3][x+dx*3]
        return int(a == 'A' && b == 'M' && c == 'X')
    } else if m[y][x] == 'X' {
        a := m[y+dy][x+dx]
        b := m[y+dy*2][x+dx*2]
        c := m[y+dy*3][x+dx*3]
        return int(a == 'M' && b == 'A' && c == 'S')
    }
    return 0
}

fn check2(m: []str, x, y: int): int {
    if m[y][x] == 'A' {
        a := m[y+1][x+1]
        b := m[y-1][x-1]
        c := m[y-1][x+1]
        d := m[y+1][x-1]
        return int(
            ((a == 'M' && b == 'S') || (b == 'M' && a == 'S')) &&
            ((c == 'M' && d == 'S') || (d == 'M' && c == 'S')))
    } 
    return 0
}

fn main() {
    lines := []str{}

    for l := ""; scanf("%s", &l) == 1 {
        lines = append(lines, l)
    }

    width, height := len(lines[0]), len(lines)

    score := 0

    // hor
    for x := 0; x <= width-4; x++ {
        for y := 0; y < height; y++ {
            score += check1(lines, x, y, 1, 0)
        }
    }

    // ver
    for x := 0; x < width; x++ {
        for y := 0; y <= height-4; y++ {
            score += check1(lines, x, y, 0, 1)
        }
    }

    // diag \
    for x := 0; x <= width-4; x++ {
        for y := 0; y <= height-4; y++ {
            score += check1(lines, x, y, 1, 1)
        }
    }

    // diag /
    for x := 3; x < width; x++ {
        for y := 0; y <= height-4; y++ {
            score += check1(lines, x, y, -1, 1)
        }
    }

    mas := 0

    // mas
    for x := 1; x <= width-2; x++ {
        for y := 1; y <= height-2; y++ {
            mas += check2(lines, x, y)
        }
    }

    printf("Part 1: %v\n", score)
    printf("Part 2: %v\n", mas)
}